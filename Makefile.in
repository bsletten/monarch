# The top-level Makefile that is used to build 

SUBDIRS := cpp/3rdparty \
           cpp/rt \
           cpp/util \
           cpp/io \
           cpp/compress \
           cpp/logging \
           cpp/modest \
           cpp/fiber \
           cpp/crypto \
           cpp/event \
           cpp/data \
           cpp/net \
           cpp/http \
           cpp/config \
           cpp/mail \
           cpp/sphinx \
           cpp/validation \
           cpp/sql \
           cpp/sqlite3 \
           cpp/mysql \
           cpp/upnp \
           cpp/app \
           cpp/test

INSTALL_LIBRARIES := \
	cpp/app/dist/linux/libdbapp.so \
	cpp/config/dist/linux/libdbconfig.so \
	cpp/compress/dist/linux/libdbcompress.so \
	cpp/crypto/dist/linux/libdbcrypto.so \
	cpp/data/dist/linux/libdbdata.so \
	cpp/event/dist/linux/libdbevent.so \
	cpp/fiber/dist/linux/libdbfiber.so \
	cpp/io/dist/linux/libdbio.so \
	cpp/logging/dist/linux/libdblogging.so \
	cpp/mail/dist/linux/libdbmail.so \
	cpp/modest/dist/linux/libdbmodest.so \
	cpp/net/dist/linux/libdbnet.so \
	cpp/http/dist/linux/libdbhttp.so \
	cpp/rt/dist/linux/libdbrt.so \
	cpp/sql/dist/linux/libdbsql.so \
	cpp/sqlite3/dist/linux/libdbsqlite3.so \
	cpp/mysql/dist/linux/libdbmysql.so \
	cpp/test/dist/linux/libdbtest.so \
	cpp/upnp/dist/linux/libdbupnp.so \
	cpp/util/dist/linux/libdbutil.so \
	cpp/sphinx/dist/linux/libdbsphinx.so \
	cpp/validation/dist/linux/libdbvalidation.so

ifndef PRINT_DIRECTORIES
PRINT_DIRECTORIES_OPTS = --no-print-directory -s
endif
ifdef PRINT_COMMANDS
PRINT_COMMANDS_OPTS = PRINT_COMMANDS=$(PRINT_COMMANDS)
endif
MAKE_JOB_OPTS ?= -j -l 5.0

MAKE_CMD = $(PRINT_COMMANDS_OPTS) $(MAKE) $(MAKE_JOB_OPTS) $(PRINT_DIRECTORIES_OPTS)
MAKE_DIR = $(PRINT_COMMANDS_OPTS) $(MAKE_CMD) -C $(dir)

.PHONY: all verbose clean test internal-docs clean-docs

all: 
	@$(foreach dir,$(SUBDIRS),$(MAKE_DIR) build-headers &&) true
	@$(foreach dir,$(SUBDIRS),$(MAKE_DIR) build-objects build-libraries &&) true
	@$(foreach dir,$(SUBDIRS),$(MAKE_DIR) build-executables &&) true

clean:
	@$(foreach dir,$(SUBDIRS),MAKE_CLEAN_ACTIVE=true $(MAKE_DIR) clean &&) true
	@rm -rf libs/*
	@echo "Cleaned all objects and libraries."

# Note: When building for multiple archs this will see all the tests and
#       will likely fail for non-current archs.  This method is used since
#       it will work for single arch builds and is difficult to know which
#       arch to specify otherwise.
test: all
	cpp/test/run-unit-tests.py

clean-docs:
	rm -rf docs/cpp-api

internal-docs: clean-docs
	mkdir -p docs/cpp-api
	doxygen setup/docs.doxygen

verbose:
	PRINT_DIRECTORIES=true $(MAKE) all

verbose-commands:
	PRINT_DIRECTORIES=true PRINT_COMMANDS=true $(MAKE) all

valgrind:
	./dbcore-valgrind cpp/test/dist/linux/run-unit-tests

packages:
	@echo "Building Debian packages..."
	@rm -f debian
	@rm -f installers/packages/*
	@ln -s installers/debian debian
	@dpkg-buildpackage -us -uc -rfakeroot -b 
	@echo "Moving packages to installers/packages..."
	@rm ../libdbcore3*changes
	@mkdir -p installers/packages
	@mv ../libdbcore3*deb installers/packages

install:
	@mkdir -p $(PREFIX)/usr/lib
	@echo "Installing dbcore libraries in $(PREFIX)/usr/lib..."
	@$(foreach lib,$(INSTALL_LIBRARIES),install -m 644 $(lib) $(PREFIX)/usr/lib/$(notdir $(lib)).@FULL_VERSION@ &&) true
	@$(foreach lib,$(INSTALL_LIBRARIES),ln -s $(notdir $(lib)).@FULL_VERSION@ $(PREFIX)/usr/lib/$(notdir $(lib)).3.0 &&) true
	@$(foreach lib,$(INSTALL_LIBRARIES),ln -s $(notdir $(lib)).@FULL_VERSION@ $(PREFIX)/usr/lib/$(notdir $(lib)).3 &&) true
	@$(foreach lib,$(INSTALL_LIBRARIES),ln -s $(notdir $(lib)).@FULL_VERSION@ $(PREFIX)/usr/lib/$(notdir $(lib)) &&) true
