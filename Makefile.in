# The top-level Makefile that is used to build 

EXECUTABLE_SUBDIRS := \
	cpp/apps/portmap \
	cpp/tests

SUBDIRS := \
	cpp/3rdparty \
	cpp/rt \
	cpp/util \
	cpp/io \
	cpp/compress \
	cpp/logging \
	cpp/modest \
	cpp/fiber \
	cpp/crypto \
	cpp/event \
	cpp/data \
	cpp/net \
	cpp/http \
	cpp/config \
	cpp/sphinx \
	cpp/validation \
	cpp/sql \
	cpp/sqlite3 \
	cpp/mail \
	cpp/mysql \
	cpp/upnp \
	cpp/app \
	cpp/test \
	$(EXECUTABLE_SUBDIRS)

INSTALL_LIBRARIES := \
	dist/lib/libdbapp.so \
	dist/lib/libdbconfig.so \
	dist/lib/libdbcompress.so \
	dist/lib/libdbcrypto.so \
	dist/lib/libdbdata.so \
	dist/lib/libdbevent.so \
	dist/lib/libdbfiber.so \
	dist/lib/libdbio.so \
	dist/lib/libdblogging.so \
	dist/lib/libdbmail.so \
	dist/lib/libdbmodest.so \
	dist/lib/libdbnet.so \
	dist/lib/libdbhttp.so \
	dist/lib/libdbrt.so \
	dist/lib/libdbsql.so \
	dist/lib/libdbsqlite3.so \
	dist/lib/libdbmysql.so \
	dist/lib/libdbupnp.so \
	dist/lib/libdbutil.so \
	dist/lib/libdbsphinx.so \
	dist/lib/libdbvalidation.so

ifndef PRINT_DIRECTORIES
PRINT_DIRECTORIES_OPTS = --no-print-directory -s
endif
ifdef PRINT_COMMANDS
PRINT_COMMANDS_OPTS = PRINT_COMMANDS=$(PRINT_COMMANDS)
endif
MAKE_JOB_OPTS ?= -j -l 5.0

MAKE_CMD = $(PRINT_COMMANDS_OPTS) $(MAKE) $(MAKE_JOB_OPTS) $(PRINT_DIRECTORIES_OPTS)
MAKE_DIR = $(PRINT_COMMANDS_OPTS) $(MAKE_CMD) -C $(dir)

.PHONY: all verbose clean test internal-docs clean-docs

all: 
	@$(foreach dir,$(SUBDIRS),IGNORE_DEPENDENCIES=true $(MAKE_DIR) build-headers &&) true
	@$(foreach dir,$(SUBDIRS),$(MAKE_DIR) build-objects build-libraries &&) true
	@$(foreach dir,$(EXECUTABLE_SUBDIRS),$(MAKE_DIR) build-executables &&) true

clean:
	@rm -rf build
	@rm -rf dist
	@echo "Cleaned all objects and libraries."

# Note: When building for multiple archs this will see all the tests and
#       will likely fail for non-current archs.  This method is used since
#       it will work for single arch builds and is difficult to know which
#       arch to specify otherwise.
test: all
	cpp/tests/run-unit-tests.py

clean-docs:
	rm -rf docs/cpp-api

internal-docs: clean-docs
	mkdir -p docs/cpp-api
	doxygen setup/docs.doxygen

verbose:
	PRINT_DIRECTORIES=true $(MAKE) all

verbose-commands:
	PRINT_DIRECTORIES=true PRINT_COMMANDS=true $(MAKE) all

valgrind:
	./monarch-valgrind dist/bin/run-unit-tests

packages:
	@echo "Building Debian packages..."
	@rm -f debian
	@rm -f installers/packages/*
	@ln -s installers/debian debian
	@dpkg-buildpackage -us -uc -rfakeroot -b 
	@echo "Moving packages to installers/packages..."
	@rm ../monarch3*changes
	@mkdir -p installers/packages
	@mv ../monarch3*deb installers/packages

install:
	@mkdir -p $(PREFIX)/usr/lib
	@echo "Installing Monarch libraries in $(PREFIX)/usr/lib..."
	@$(foreach lib,$(INSTALL_LIBRARIES),install -m 644 $(lib) $(PREFIX)/usr/lib/$(notdir $(lib)).@FULL_VERSION@ &&) true
	@$(foreach lib,$(INSTALL_LIBRARIES),ln -s $(notdir $(lib)).@FULL_VERSION@ $(PREFIX)/usr/lib/$(notdir $(lib)).3.0 &&) true
	@$(foreach lib,$(INSTALL_LIBRARIES),ln -s $(notdir $(lib)).@FULL_VERSION@ $(PREFIX)/usr/lib/$(notdir $(lib)).3 &&) true
	@$(foreach lib,$(INSTALL_LIBRARIES),ln -s $(notdir $(lib)).@FULL_VERSION@ $(PREFIX)/usr/lib/$(notdir $(lib)) &&) true
