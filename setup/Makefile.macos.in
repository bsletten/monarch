# This file contains platform-specific Makefile rules for building 
# Mac OSX binaries and packages.

# MacOS-specific variables
MACOS_CXX = @MACOS_CXX@
# TODO: support build target arch detection and use -march=i686/powerpc/etc
MACOS_CXX_FLAGS = @CXXFLAGS@ -Wall -fPIC -DMACOS $(MODULE_CXX_FLAGS) $(MODULE_MACOS_CXX_FLAGS) @DEFS@
MACOS_LD_FLAGS = @LDFLAGS@ -Wl,-dylib_compatibility_version,@FULL_DOTTED_VERSION@ -Wl,-dylib_current_version,@FULL_DOTTED_VERSION@ -Wl,-flat_namespace
MACOS_INCLUDES = $(INCLUDES) -I/sw/include 
MACOS_LIBS = -L$(MACOS_LIB_DIR)
# Add default library location for Fink
MACOS_LIBS += -L/sw/lib
MACOS_AR = @MACOS_AR@
MACOS_AS = @MACOS_AS@
MACOS_BUILD_DIR = $(DBCORE)/build/$(subst $(DBCORE)/cpp/,,$(CWD))
MACOS_DIST_DIR = $(DBCORE)/dist
MACOS_LIB_DIR = $(MACOS_DIST_DIR)/lib
MACOS_BIN_DIR = $(MACOS_DIST_DIR)/bin
MACOS_CPP_SOURCES := $(filter %.cpp, $(SOURCES))
MACOS_AS_SOURCES := $(filter %.S, $(SOURCES))
MACOS_HEADER_FILES := $(patsubst %.h, $(DBCORE)/$(HEADER_DIST_DIR)/%.h, $(HEADERS))
MACOS_LIBRARY_SOURCES := $(patsubst %.cpp,$(MACOS_BUILD_DIR)/%.cpp, $(MACOS_CPP_SOURCES))  $(patsubst %.S,$(MACOS_BUILD_DIR)/%.S, $(MACOS_AS_SOURCES))
MACOS_EXECUTABLE_SOURCES := $(patsubst %,$(MACOS_BUILD_DIR)/%.cpp, $(EXECUTABLES))
MACOS_LIBRARY_OBJECTS := $(patsubst %.cpp,$(MACOS_BUILD_DIR)/%-macos.o, $(MACOS_CPP_SOURCES)) $(patsubst %.S,$(MACOS_BUILD_DIR)/%-asm-macos.o, $(MACOS_AS_SOURCES))
MACOS_EXECUTABLE_OBJECTS := $(patsubst %,$(MACOS_BUILD_DIR)/%-macos.o, $(EXECUTABLES))
DYNAMIC_MACOS_LIBRARIES := $(DYNAMIC_LINK_LIBRARIES) $(DYNAMIC_MACOS_LIBRARIES)
MACOS_EXECUTABLES := $(patsubst %,$(MACOS_BIN_DIR)/%, $(EXECUTABLES))
MACOS_DEPENDENCIES := $(patsubst %.cpp,$(MACOS_BUILD_DIR)/%-macos.P, $(MACOS_CPP_SOURCES))
MACOS_DEPENDENCIES += $(patsubst %.cpp,%-macos.P, $(MACOS_EXECUTABLE_SOURCES))

MACOS_LIBRARIES := $(patsubst %,$(MACOS_LIB_DIR)/lib%.dylib, $(LIBRARIES))
#MACOS_LIBRARIES += $(patsubst %,$(MACOS_LIB_DIR)/lib%.a, $(LIBRARIES))

ALL_HEADERS += $(MACOS_HEADER_FILES)
ALL_SOURCES += $(MACOS_LIBRARY_SOURCES) $(MACOS_EXECUTABLE_SOURCES)
ALL_OBJECTS += $(MACOS_LIBRARY_OBJECTS) $(MACOS_EXECUTABLE_OBJECTS)
ALL_LIBRARIES += $(MACOS_LIBRARIES)
ALL_EXECUTABLES += $(MACOS_EXECUTABLES)
ALL_DIRECTORIES += $(MACOS_BUILD_DIR) $(MACOS_DIST_DIR) $(MACOS_LIB_DIR) $(MACOS_BIN_DIR)

# Ignore dependencies if specified in the Makefile. This will ensure that the
# dependencies for all .cpp files are not pulled in and thus won't be built
ifndef IGNORE_DEPENDENCIES
-include $(MACOS_DEPENDENCIES)
endif

$(MACOS_HEADER_FILES): 
	$(PCMD) mkdir -p $(dir $@)
	$(PCMD) ln -sf $(subst $(DBCORE)/$(HEADER_DIST_DIR)/,$(CWD)/,$@) $@

# You can build either multiple executables per directory, or multiple
# libraries per directory, but not both.
ifdef EXECUTABLES
$(MACOS_EXECUTABLE_SOURCES):
	$(PCMD) mkdir -p $(dir $@)
	$(PCMD) ln -sf $(subst $(MACOS_BUILD_DIR)/,$(CWD)/,$@) $@
else
$(MACOS_LIBRARY_SOURCES):
	$(PCMD) mkdir -p $(dir $@)
	$(PCMD) ln -sf $(subst $(MACOS_BUILD_DIR)/,$(CWD)/,$@) $@
endif

clean-objects:
	$(PCMD) rm -rf $(MACOS_LIBRARY_OBJECTS) $(MACOS_EXECUTABLE_OBJECTS)

clean-libraries:
	$(PCMD) rm -rf $(MACOS_LIBRARIES)

%-asm-macos.o: %.S
	@echo "Compiling build/$(subst .P,.o,$(subst $(DBCORE)/build/,,$@))..."
	$(PCMD) $(MACOS_CXX) $(MACOS_CXX_FLAGS) -c -MD -o $(basename $@).o $(MACOS_INCLUDES) $(realpath $<)
	$(PCMD) cp $(basename $@).d $(basename $@).P; \
		sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d' -e 's/$$/ :/' < $(basename $@).d >> $(basename $@).P; \
		rm -f $(basename $@).d

%-macos.o %-macos.P: %.cpp
	@echo "Compiling build/$(subst .P,.o,$(subst $(DBCORE)/build/,,$@))..."
	$(PCMD) $(MACOS_CXX) $(MACOS_CXX_FLAGS) -c -MD -o $(basename $@).o $(MACOS_INCLUDES) $(realpath $<)
	$(PCMD) cp $(basename $@).d $(basename $@).P; \
		sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d' -e 's/$$/ :/' < $(basename $@).d >> $(basename $@).P; \
		rm -f $(basename $@).d

%.dylib: $(MACOS_LIBRARY_OBJECTS)
	@echo "Assembling $(subst $(DBCORE)/,,$@)..."
	$(PCMD) mkdir -p $(MACOS_LIB_DIR)
	$(PCMD) $(MACOS_CXX) $(MACOS_LD_FLAGS) -install_name $(MACOS_LIB_DIR)/$(@F) $(MACOS_LIBS) -shared -o $@ $(MACOS_LIBRARY_OBJECTS) $(DYNAMIC_MACOS_LIBRARIES:%=-l%)

ifdef EXECUTABLES
#$(STATIC_MACOS_LIBRARIES):
#	# This is a fake target to override the default .dylib build
$(MACOS_EXECUTABLES): $(MACOS_LIBRARY_SOURCES) $$(@F).cpp $(MACOS_BUILD_DIR)/$$(@F)-macos.o $(STATIC_MACOS_LIBRARIES) $$(foreach source,$$($$(subst -,_,$$(@F))_EXTRA_SOURCES),$(MACOS_BUILD_DIR)/$$(source)-macos.o)
	@echo "Assembling dist/bin/$(@F)..."
	$(PCMD) $(MACOS_CXX) $(MACOS_CXX_FLAGS) $(MACOS_LD_FLAGS) $(MACOS_LIBS) -o $@ $(MACOS_BUILD_DIR)/$(@F)-macos.o \
	$(foreach source,$($(subst -,_,$(@F))_EXTRA_SOURCES),$(MACOS_BUILD_DIR)/$(source)-macos.o) \
	$(DYNAMIC_MACOS_LIBRARIES:%=-l%) $(DYNAMIC_EXECUTABLE_LIBRARIES:%=-l%)
endif

dump-variables:
	@echo BUILD_FOR_LINUX=$(BUILD_FOR_LINUX)
	@echo BUILD_FOR_WINDOWS=$(BUILD_FOR_WINDOWS)
	@echo BUILD_FOR_MACOS=$(BUILD_FOR_MACOS)
	@echo AR_FLAGS=$(AR_FLAGS)
	@echo DBCORE=$(DBCORE)
	@echo INCLUDES=$(INCLUDES)
	@echo CWD=$(CWD)

# MacOS-specific variables
	@echo MACOS_CXX=$(MACOS_CXX)
	@echo MACOS_CXX_FLAGS=$(MACOS_CXX_FLAGS)
	@echo MACOS_INCLUDES=$(MACOS_INCLUDES)
	@echo MACOS_LIB_DIR=$(MACOS_LIB_DIR)
	@echo MACOS_LIBS=$(MACOS_LIBS)
	@echo MACOS_AR=$(MACOS_AR)
	@echo MACOS_BUILD_DIR=$(MACOS_BUILD_DIR)
	@echo MACOS_DIST_DIR=$(MACOS_DIST_DIR)
	@echo DYNAMIC_MACOS_LIBRARIES=$(DYNAMIC_MACOS_LIBRARIES)
	@echo MACOS_LIBRARY_SOURCES=$(MACOS_LIBRARY_SOURCES)
	@echo MACOS_EXECUTABLE_SOURCES=$(MACOS_EXECUTABLE_SOURCES)
	@echo MACOS_LIBRARY_OBJECTS=$(MACOS_LIBRARY_OBJECTS)
	@echo MACOS_EXECUTABLE_OBJECTS=$(MACOS_EXECUTABLE_OBJECTS)
	@echo MACOS_EXECUTABLES=$(MACOS_EXECUTABLES)
	@echo MACOS_DEPENDENCIES=$(MACOS_DEPENDENCIES)
	@echo MACOS_LIBRARIES=$(MACOS_LIBRARIES)

	@echo ALL_SOURCES=$(ALL_SOURCES)
	@echo ALL_OBJECTS=$(ALL_OBJECTS)
	@echo ALL_LIBRARIES=$(ALL_LIBRARIES)
	@echo ALL_EXECUTABLES=$(ALL_EXECUTABLES)

