# This file contains platform-specific Makefile rules for building 
# Linux binaries and packages.

# Linux-specific variables
LINUX_CXX = @LINUX_CXX@
LINUX_CXX_FLAGS = $(CXXFLAGS) -g -Wall -fPIC $(MODULE_LINUX_CXX_FLAGS) -march=i686 @DEFS@
LINUX_LD_FLAGS = @LDFLAGS@
LINUX_INCLUDES = $(INCLUDES)
LINUX_LIB_DIR = $(DBCORE)/libs/linux
LINUX_LIBS = -L$(LINUX_LIB_DIR) -L/usr/lib/mysql
LINUX_AR = @LINUX_AR@
LINUX_BUILD_DIR = build/linux
LINUX_DIST_DIR = dist/linux
LINUX_LIBRARY_SOURCES := $(patsubst %.cpp,$(LINUX_BUILD_DIR)/%.cpp, $(SOURCES))
LINUX_EXECUTABLE_SOURCES := $(patsubst %,$(LINUX_BUILD_DIR)/%.cpp, $(EXECUTABLES))
LINUX_LIBRARY_OBJECTS := $(patsubst %.cpp,$(LINUX_BUILD_DIR)/%-linux.o, $(SOURCES))
LINUX_EXECUTABLE_OBJECTS := $(patsubst %,$(LINUX_BUILD_DIR)/%-linux.o, $(EXECUTABLES))
DYNAMIC_LINUX_LIBRARIES := $(DYNAMIC_LINK_LIBRARIES) $(DYNAMIC_LINUX_LIBRARIES)
LINUX_EXECUTABLES := $(patsubst %,$(LINUX_DIST_DIR)/%, $(EXECUTABLES))
LINUX_DEPENDENCIES := $(patsubst %.cpp,$(LINUX_BUILD_DIR)/%-linux.P, $(SOURCES))
LINUX_DEPENDENCIES += $(patsubst %.cpp,%-linux.P, $(LINUX_EXECUTABLE_SOURCES))

LINUX_LIBRARIES := $(patsubst %,$(LINUX_DIST_DIR)/lib%.so, $(LIBRARIES))
#LINUX_LIBRARIES += $(patsubst %,$(LINUX_DIST_DIR)/lib%.a, $(LIBRARIES))

ALL_SOURCES += $(LINUX_LIBRARY_SOURCES) $(LINUX_EXECUTABLE_SOURCES)
ALL_OBJECTS += $(LINUX_LIBRARY_OBJECTS) $(LINUX_EXECUTABLE_OBJECTS)
ALL_LIBRARIES += $(LINUX_LIBRARIES)
ALL_EXECUTABLES += $(LINUX_EXECUTABLES)
ALL_DIRECTORIES += $(LINUX_BUILD_DIR) $(LINUX_DIST_DIR)

ifndef MAKE_CLEAN_ACTIVE
-include $(LINUX_DEPENDENCIES)
endif

$(LINUX_LIBRARY_SOURCES): build-setup
	$(PCMD) mkdir -p $(dir $@)
	$(PCMD) ln -sf $(subst $(LINUX_BUILD_DIR)/,$(MODULE_BASE_DIR)/,$@) $@

ifdef EXECUTABLES
$(LINUX_EXECUTABLE_SOURCES): build-setup
	$(PCMD) mkdir -p $(dir $@)
	$(PCMD) ln -sf $(subst $(LINUX_BUILD_DIR)/,$(MODULE_BASE_DIR)/,$@) $@
endif

clean-objects:
	$(PCMD) rm -rf $(LINUX_BUILD_DIR)

clean-libraries:
	$(PCMD) rm -rf $(LINUX_DIST_DIR)

%-linux.o %-linux.P: %.cpp
	@echo "Building $(basename $@).o..."
	$(PCMD) $(LINUX_CXX) $(LINUX_CXX_FLAGS) -c -MD -o $(basename $@).o $(LINUX_INCLUDES) -I. $(realpath $<)
	$(PCMD) cp $(basename $@).d $(basename $@).P; \
		sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d' -e 's/$$/ :/' < $(basename $@).d >> $(basename $@).P; \
		rm -f $(basename $@).d

%.so: $(LINUX_LIBRARY_OBJECTS)
	@echo "Building $@..."
	$(PCMD) $(LINUX_CXX) $(LINUX_LD_FLAGS) $(LINUX_LIBS) -shared -o $@ $(LINUX_LIBRARY_OBJECTS) $(DYNAMIC_LINUX_LIBRARIES:%=-l%)
	$(PCMD) mkdir -p $(LINUX_LIB_DIR)
	$(PCMD) ln -sf $(MODULE_BASE_DIR)/$@ $(LINUX_LIB_DIR)/$(@F)

#ifeq ($(BUILD_FOR_LINUX),yes)
#%.a: $(LINUX_LIBRARY_OBJECTS)
#	@echo "Building $@..."
#	$(PCMD) $(LINUX_AR) $(AR_FLAGS) $@ $(LINUX_LIBRARY_OBJECTS)
#	$(PCMD) mkdir -p $(LINUX_LIB_DIR)
#	$(PCMD) ln -sf $(MODULE_BASE_DIR)/$@ $(LINUX_LIB_DIR)/$(@F)
#endif

ifdef EXECUTABLES
#$(STATIC_LINUX_LIBRARIES):
#	# This is a fake target to override the default .a build
$(LINUX_EXECUTABLES): $(LINUX_LIBRARY_SOURCES) $$(@F).cpp $(LINUX_BUILD_DIR)/$$(@F)-linux.o $(STATIC_LINUX_LIBRARIES)
	@echo "Building $(@F)..."
	$(PCMD) $(LINUX_CXX) $(LINUX_CXX_FLAGS) $(LINUX_LD_FLAGS) $(LINUX_LIBS) -o $@ $(LINUX_BUILD_DIR)/$(@F)-linux.o $(DYNAMIC_LINUX_LIBRARIES:%=-l%) $(DYNAMIC_EXECUTABLE_LIBRARIES:%=-l%)
endif

dump-variables:
	@echo BUILD_FOR_LINUX=$(BUILD_FOR_LINUX)
	@echo BUILD_FOR_WINDOWS=$(BUILD_FOR_WINDOWS)
	@echo BUILD_FOR_MACOS=$(BUILD_FOR_MACOS)
	@echo AR_FLAGS=$(AR_FLAGS)
	@echo DBCORE=$(DBCORE)
	@echo INCLUDES=$(INCLUDES)
	@echo MODULE_BASE_DIR=$(MODULE_BASE_DIR)
# Linux-specific variables
	@echo LINUX_CXX=$(LINUX_CXX)
	@echo LINUX_CXX_FLAGS=$(LINUX_CXX_FLAGS)
	@echo LINUX_INCLUDES=$(LINUX_INCLUDES)
	@echo LINUX_LIB_DIR=$(LINUX_LIB_DIR)
	@echo LINUX_LIBS=$(LINUX_LIBS)
	@echo LINUX_AR=$(LINUX_AR)
	@echo LINUX_BUILD_DIR=$(LINUX_BUILD_DIR)
	@echo LINUX_DIST_DIR=$(LINUX_DIST_DIR)
	@echo DYNAMIC_LINUX_LIBRARIES=$(DYNAMIC_LINUX_LIBRARIES)
	@echo LINUX_LIBRARY_SOURCES=$(LINUX_LIBRARY_SOURCES)
	@echo LINUX_EXECUTABLE_SOURCES=$(LINUX_EXECUTABLE_SOURCES)
	@echo LINUX_LIBRARY_OBJECTS=$(LINUX_LIBRARY_OBJECTS)
	@echo LINUX_EXECUTABLE_OBJECTS=$(LINUX_EXECUTABLE_OBJECTS)
	@echo LINUX_EXECUTABLES=$(LINUX_EXECUTABLES)
	@echo LINUX_DEPENDENCIES=$(LINUX_DEPENDENCIES)
	@echo LINUX_LIBRARIES=$(LINUX_LIBRARIES)

	@echo ALL_SOURCES=$(ALL_SOURCES)
	@echo ALL_OBJECTS=$(ALL_OBJECTS)
	@echo ALL_LIBRARIES=$(ALL_LIBRARIES)
	@echo ALL_EXECUTABLES=$(ALL_EXECUTABLES)
