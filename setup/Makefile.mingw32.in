# This file contains platform-specific Makefile rules for building
# Windows binaries and packages.

# Windows-specific variables
WINDOWS_CXX = @WINDOWS_CXX@
WINDOWS_CXX_FLAGS = @CXXFLAGS@ -march=i686 -Wall -D_WIN32_WINNT=0x0501 $(MODULE_CXX_FLAGS) @DEFS@
WINDOWS_LD_FLAGS = @LDFLAGS@
WINDOWS_INCLUDES = $(INCLUDES) -I$(MONARCH)/cpp/3rdparty/pthread/include -I$(MONARCH)/cpp/3rdparty/openssl/include -I$(MONARCH)/cpp/3rdparty/expat/include -I$(MONARCH)/cpp/3rdparty/mysql/include -I$(MONARCH)/cpp/3rdparty/regex/include -I$(MONARCH)/cpp/3rdparty/sqlite3/include -I$(MONARCH)/cpp/3rdparty/zlib/include -I$(MONARCH)/cpp/3rdparty/iconv/include
WINDOWS_LIBS = -L$(WINDOWS_LIB_DIR)
WINDOWS_AR = @WINDOWS_AR@
WINDOWS_AS = @WINDOWS_AS@
DYNAMIC_WINDOWS_LIBRARIES := $(DYNAMIC_LINK_LIBRARIES) $(DYNAMIC_WINDOWS_LIBRARIES)
WINDOWS_DLLWRAP = @WINDOWS_DLLWRAP@
WINDOWS_DLLWRAP_FLAGS = --as=$(WINDOWS_AS) --export-all --driver-name $(WINDOWS_CXX) -s
WINDOWS_BUILD_DIR = $(MONARCH)/build/$(subst $(MONARCH)/cpp/,,$(CWD))
WINDOWS_DIST_DIR = $(MONARCH)/dist
WINDOWS_LIB_DIR = $(WINDOWS_DIST_DIR)/lib
WINDOWS_BIN_DIR = $(WINDOWS_DIST_DIR)/bin
WINDOWS_HEADER_FILES := $(patsubst %.h, $(MONARCH)/$(HEADER_DIST_DIR)/%.h, $(HEADERS))
WINDOWS_LIBRARY_SOURCES := $(patsubst %.cpp,$(WINDOWS_BUILD_DIR)/%.cpp, $(SOURCES))
WINDOWS_EXECUTABLE_SOURCES := $(patsubst %,$(WINDOWS_BUILD_DIR)/%.cpp, $(EXECUTABLES))
WINDOWS_LIBRARY_OBJECTS := $(patsubst %.cpp,$(WINDOWS_BUILD_DIR)/%-windows.o, $(SOURCES))
WINDOWS_EXECUTABLE_OBJECTS := $(patsubst %,$(WINDOWS_BUILD_DIR)/%-windows.o, $(EXECUTABLES))
WINDOWS_EXECUTABLES := $(patsubst %,$(WINDOWS_BIN_DIR)/%.exe, $(EXECUTABLES))
WINDOWS_DEPENDENCIES := $(patsubst %.cpp,$(WINDOWS_BUILD_DIR)/%-windows.P, $(SOURCES))
WINDOWS_DEPENDENCIES += $(patsubst %.cpp,-windows%.P, $(WINDOWS_EXECUTABLE_SOURCES))

#WINDOWS_LIBRARIES := $(patsubst %,$(WINDOWS_LIB_DIR)/%.lib, $(LIBRARIES))
WINDOWS_LIBRARIES = $(patsubst %,$(WINDOWS_LIB_DIR)/%.dll, $(LIBRARIES))

ALL_HEADERS += $(WINDOWS_HEADER_FILES)
ALL_SOURCES += $(WINDOWS_LIBRARY_SOURCES) $(WINDOWS_EXECUTABLE_SOURCES)
ALL_OBJECTS += $(WINDOWS_LIBRARY_OBJECTS) $(WINDOWS_EXECUTABLE_OBJECTS)
ALL_LIBRARIES += $(WINDOWS_LIBRARIES)
ALL_EXECUTABLES += $(WINDOWS_EXECUTABLES)
ALL_DIRECTORIES += $(WINDOWS_BUILD_DIR) $(WINDOWS_DIST_DIR) $(WINDOWS_LIB_DIR) $(WINDOWS_BIN_DIR)

# Ignore dependencies if specified in the Makefile. This will ensure that the
# dependencies for all .cpp files are not pulled in and thus won't be built
ifndef IGNORE_DEPENDENCIES
-include $(LINUX_DEPENDENCIES)
endif

$(WINDOWS_HEADER_FILES): 
	$(PCMD) mkdir -p $(dir $@)
	$(PCMD) ln -sf $(subst $(MONARCH)/$(HEADER_DIST_DIR)/,$(CWD)/,$@) $@

# You can build either multiple executables per directory, or multiple
# libraries per directory, but not both.
ifdef EXECUTABLES
$(WINDOWS_EXECUTABLE_SOURCES):
	$(PCMD) mkdir -p $(dir $@)
	$(PCMD) ln -sf $(subst $(WINDOWS_BUILD_DIR)/,$(CWD)/,$@) $@
else
$(WINDOWS_LIBRARY_SOURCES):
	$(PCMD) mkdir -p $(dir $@)
	$(PCMD) ln -sf $(subst $(WINDOWS_BUILD_DIR)/,$(CWD)/,$@) $@
endif

clean-objects:
	$(PCMD) rm -rf $(WINDOWS_BUILD_DIR)

clean-libraries:
	$(PCMD) rm -rf $(WINDOWS_LIBRARIES)

%-windows.o %-windows.P: %.cpp $(WINDOWS_HEADER_FILES)
	@echo "Compiling build/$(subst .P,.o,$(subst $(MONARCH)/build/,,$@))..."
	$(PCMD) $(WINDOWS_CXX) $(WINDOWS_CXX_FLAGS) -c -MD -o $(basename $@).o $(WINDOWS_INCLUDES) -I. $<
	$(PCMD) cp $(basename $@).d $(basename $@).P; \
		sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' -e '/^$$/ d' -e 's/$$/ :/' < $(basename $@).d >> $(basename $@).P; \
		rm -f $(basename $@).d

%.dll: $(WINDOWS_LIBRARY_OBJECTS)
	@echo "Linking $(subst $(MONARCH)/,,$@)..."
	$(PCMD) $(WINDOWS_CXX) -shared $(WINDOWS_LD_FLAGS) $(WINDOWS_LIBS) -o $@ $^ $(DYNAMIC_WINDOWS_LIBRARIES:%=-l%) $(EXTRA_WINDOWS_LIBRARIES)

%.lib: $(WINDOWS_LIBRARY_OBJECTS)
	@echo "Linking $(subst $(MONARCH)/,,$@)..."
	$(PCMD) $(WINDOWS_AR) $(AR_FLAGS) $@ $(WINDOWS_LIBRARY_OBJECTS)

ifdef EXECUTABLES
$(WINDOWS_EXECUTABLES): $(WINDOWS_LIBRARY_SOURCES) $$(basename $$(@F)).cpp $(WINDOWS_BUILD_DIR)/$$(basename $$(@F))-windows.o $(STATIC_WINDOWS_LIBRARIES) $$(foreach source,$$($$(subst -,_,$$(basename $$(@F)))_EXTRA_SOURCES),$(WINDOWS_BUILD_DIR)/$$(source)-windows.o)
	@echo "Linking dist/bin/$(@F)..."
	$(PCMD) $(WINDOWS_CXX) $(WINDOWS_CXX_FLAGS) $(WINDOWS_LD_FLAGS) -L$(WINDOWS_LIB_DIR) -o $@ $(WINDOWS_BUILD_DIR)/$(basename $(@F))-windows.o \
	$(foreach source,$($(subst -,_,$(basename $(@F)))_EXTRA_SOURCES),$(WINDOWS_BUILD_DIR)/$(source)-windows.o) \
	$(DYNAMIC_WINDOWS_LIBRARIES:%=-l%) $(DYNAMIC_EXECUTABLE_LIBRARIES:%=-l%) $(EXTRA_WINDOWS_LIBRARIES)
endif

dump-variables:
	@echo BUILD_FOR_LINUX=$(BUILD_FOR_LINUX)
	@echo BUILD_FOR_WINDOWS=$(BUILD_FOR_WINDOWS)
	@echo BUILD_FOR_MACOS=$(BUILD_FOR_MACOS)
	@echo AR_FLAGS=$(AR_FLAGS)
	@echo MONARCH=$(MONARCH)
	@echo INCLUDES=$(INCLUDES)
	@echo MODULE_BASE_DIR=$(MODULE_BASE_DIR)
# Windows-specific variables
	@echo WINDOWS_CXX=$(WINDOWS_CXX)
	@echo WINDOWS_CXX_FLAGS=$(WINDOWS_CXX_FLAGS)
	@echo WINDOWS_INCLUDES=$(WINDOWS_INCLUDES)
	@echo WINDOWS_LIB_DIR=$(WINDOWS_LIB_DIR)
	@echo WINDOWS_LIBS=$(WINDOWS_LIBS)
	@echo WINDOWS_AR=$(WINDOWS_AR)
	@echo WINDOWS_AS=$(WINDOWS_AS)
	@echo DYNAMIC_WINDOWS_LIBRARIES=$(DYNAMIC_WINDOWS_LIBRARIES)
	@echo WINDOWS_DLLWRAP=$(WINDOWS_DLLWRAP)
	@echo WINDOWS_DLLWRAP_FLAGS=$(WINDOWS_DLLWRAP_FLAGS)
	@echo WINDOWS_BUILD_DIR=$(WINDOWS_BUILD_DIR)
	@echo WINDOWS_DIST_DIR=$(WINDOWS_DIST_DIR)
	@echo WINDOWS_LIBRARY_SOURCES=$(WINDOWS_LIBRARY_SOURCES)
	@echo WINDOWS_EXECUTABLE_SOURCES=$(WINDOWS_EXECUTABLE_SOURCES)
	@echo WINDOWS_LIBRARY_OBJECTS=$(WINDOWS_LIBRARY_OBJECTS)
	@echo WINDOWS_EXECUTABLE_OBJECTS=$(WINDOWS_EXECUTABLE_OBJECTS)
	@echo WINDOWS_EXECUTABLES=$(WINDOWS_EXECUTABLES)
	@echo WINDOWS_DEPENDENCIES=$(WINDOWS_DEPENDENCIES)
	@echo WINDOWS_LIBRARIES=$(WINDOWS_LIBRARIES)

	@echo ALL_SOURCES=$(ALL_SOURCES)
	@echo ALL_OBJECTS=$(ALL_OBJECTS)
	@echo ALL_LIBRARIES=$(ALL_LIBRARIES)
	@echo ALL_EXECUTABLES=$(ALL_EXECUTABLES)
