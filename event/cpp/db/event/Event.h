/*
 * Copyright (c) 2007-2008 Digital Bazaar, Inc.  All rights reserved.
 */
#ifndef db_event_Event_H
#define db_event_Event_H

#include "db/rt/DynamicObject.h"

namespace db
{
namespace event
{

/**
 * An Event is an object that is generated by an Observable when something
 * significant occurs. An Event may be dispatched to the Observable's
 * registered Observers so they can take whatever action they deem appropriate.
 * 
 * Event["id"] is reserved and will refer to an EventId for the Event.
 * Event["serial"] is reserved.
 * Event["parallel"] is reserved.
 * 
 * @author Dave Longley
 */
typedef db::rt::DynamicObject Event;
typedef uint64_t EventId;

/**
 * An EventFilter can be used to filter events that are received by an
 * Observer. It is a DynamicObject map that is a subset of data that must
 * be present in an Event in order for an Observer to receive it.
 * 
 * @author Dave Longley
 */
typedef db::rt::DynamicObject EventFilter;

} // end namespace event
} // end namespace db
#endif
